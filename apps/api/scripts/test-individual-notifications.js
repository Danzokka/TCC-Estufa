const axios = require('axios');

const API_BASE_URL = process.env.API_BASE_URL || 'http://localhost:5000';

async function delay(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

async function runTest() {
  console.log('üîî Teste de Notifica√ß√µes Individuais');
  console.log('=====================================');

  console.log('\nüìù Enviando notifica√ß√µes uma por vez...');

  try {
    // Primeira notifica√ß√£o - Bomba ativada
    console.log('\n1Ô∏è‚É£ Enviando notifica√ß√£o de bomba...');
    await axios.post(`${API_BASE_URL}/test-notifications/pump-activated`, {
      userId: 'test-user-id',
      greenhouseId: 'test-greenhouse-id-1',
      duration: 45,
      waterAmount: 3.0,
      reason: 'Teste de irriga√ß√£o autom√°tica'
    });
    console.log('‚úÖ Notifica√ß√£o 1 enviada - Aguarde o som!');

    // Aguardar 2 segundos
    await delay(2000);

    // Segunda notifica√ß√£o - Irriga√ß√£o detectada
    console.log('\n2Ô∏è‚É£ Enviando notifica√ß√£o de irriga√ß√£o detectada...');
    await axios.post(`${API_BASE_URL}/test-notifications/irrigation-detected`, {
      userId: 'test-user-id',
      greenhouseId: 'test-greenhouse-id-1',
      moistureIncrease: 22.5,
      previousMoisture: 28.0,
      currentMoisture: 50.5
    });
    console.log('‚úÖ Notifica√ß√£o 2 enviada - Aguarde o som!');

    // Aguardar 2 segundos
    await delay(2000);

    // Terceira notifica√ß√£o - Confirma√ß√£o de irriga√ß√£o
    console.log('\n3Ô∏è‚É£ Enviando notifica√ß√£o de confirma√ß√£o...');
    await axios.post(`${API_BASE_URL}/test-notifications/irrigation-confirmed`, {
      userId: 'test-user-id',
      greenhouseId: 'test-greenhouse-id-1',
      id: 'some-irrigation-id',
      waterAmount: 4.0,
      notes: 'Teste de confirma√ß√£o manual'
    });
    console.log('‚úÖ Notifica√ß√£o 3 enviada - Aguarde o som!');

    // Aguardar 2 segundos
    await delay(2000);

    // Quarta notifica√ß√£o - Alerta do sistema
    console.log('\n4Ô∏è‚É£ Enviando alerta do sistema...');
    await axios.post(`${API_BASE_URL}/test-notifications/pump-activated`, {
      userId: 'test-user-id',
      greenhouseId: 'test-greenhouse-id-1',
      duration: 10,
      waterAmount: 0,
      reason: 'Alerta de sistema de teste'
    });
    console.log('‚úÖ Notifica√ß√£o 4 enviada - Aguarde o som!');

  } catch (error) {
    console.error('‚ùå Erro ao enviar notifica√ß√µes:', error.message);
  }

  console.log('\nüìä Resumo:');
  console.log('‚úÖ 4 notifica√ß√µes enviadas individualmente');
  console.log('üîä Cada notifica√ß√£o deve tocar um som separado');

  console.log('\nüåê Para testar no frontend:');
  console.log('1. Acesse: http://localhost:3000/dashboard');
  console.log('2. Clique no sino (üîî) no canto superior direito');
  console.log('3. Voc√™ deve ver 4 notifica√ß√µes');
  console.log('4. Cada notifica√ß√£o deve ter tocado um som individual');

  console.log('\nüîä Recursos testados:');
  console.log('   - Som individual para cada notifica√ß√£o');
  console.log('   - Notifica√ß√µes em tempo real');
  console.log('   - Interface animada');
  console.log('   - Persist√™ncia no banco');

  console.log('\n‚úÖ Teste de notifica√ß√µes individuais conclu√≠do!');
}

runTest();
